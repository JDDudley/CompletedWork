Activity 09: Compare & Switch

Jason Dudley
CS121-002, Spring  2020

1.1.3   Result Variable: 0.09999999999999998
        Expected Result: 0.1
        Why Different? The result variable is a floating-point calculation, which cannot be trusted
        to be exact.

1.1.4   It goes into the else statement, because the result and expected variables are not equal.

1.1.7   Math.abs(result - expected) < TOLERANCE works to properly compare result and expected.

1.2.2   CODE_WORD "peanut" (id=20)
        myWord "peanut" (id=20)

1.2.3   It enters the if block, because the strings being compared are stored in the same location.

1.2.6   CODE_WORD "peanut" (id=20)
        input "peanut" (id=42)

1.2.7   It goes into the else block, because different strings are being compared despite having
        the same value. This is evident by the differing id's for the 2 variables.

1.2.9   Replacing the comparison 'input == CODE_WORD' with 'input.equals(CODE_WORD)' results in a
        comparison of string values and the expected behavior with the execution of the if block
        upon entering the correct input.

1.3.2   firstLetter: p
        asciiValue: 112